{
    "contents" : "# ************************  MAPAS *********************************\n\n# Cargar librerías necesarias\nlibrary(maptools)\nlibrary(PBSmapping)\nlibrary(sp)\nlibrary(rgdal)\nlibrary(gdata)\nsource(\"/home/hecvi/R/Fun/recodeCoord.R\")\n\n# cargar mapa previamente creado\nload(\"mapa_holbox.RData\")\n\n# Mapa\n# x11()\n  plot(holbox, col=\"khaki\", pbg=\"blue\", xaxs=\"i\", yaxs=\"i\", \n       axes=TRUE, lty=1, border=\"grey\")\n    grid(col=\"grey\")\n    box()\n\n\n# ejemplo para dibujar área \"azul\"\npolygon(x=c(-86.66, -86.66, -86.58, -86.58, -86.66), \n\t\t\t\ty=c(21.41, 21.58, 21.58, 21.41, 21.41))\n\n\n\n# EXPORTAR Shapefile para visualizar en QGIS\n  IDs <- sapply(slot(holbox, \"polygons\"), function(x) slot(x, \"ID\"))\n  df <- data.frame(rep(0, length(IDs)), row.names=IDs)\n  holbox.spdf <- SpatialPolygonsDataFrame(holbox, df)\n  writePolyShape(holbox.spdf, fn=\"holbox\")\n\n\n################################################################################\n# 'transectos'\n  coordUTM_Holbox <- read.delim(\"coordUTM_Holbox.txt\")\n  #plot(coordUTM_Holbox)\n\n# transformar UTM a lon-lat\n  coordinates(coordUTM_Holbox) <- c(\"Lon\", \"Lat\")\n  proj4string(coordUTM_Holbox) <- CRS(\"+proj=utm +zone=14 +datum=WGS84\")\n  coord_Holbox <- spTransform(coordUTM_Holbox, CRS(\"+proj=longlat\"))\n\n  points(coord_Holbox)\n  coord_Holbox\n################################################################################\n\n\n# Importar datos\n  manta <- read.xls(\"Datos (20-02-14).xlsx\", sheet = 1)\n  names(manta)[2] <- \"Año\"\n  manta <- manta[complete.cases(manta$coordLON), ] # hay una sin posición\n  \n# coordenadas de interés  \n  lons <- c(-87.5, -86.5)\n  lats <- c(21, 22)\n\n  plot(holbox, col=\"khaki\", pbg=\"blue\", xlim=lons, ylim=lats, \n       xaxs=\"i\", yaxs=\"i\", axes=TRUE, lty=1, border=\"grey\")\n    grid(col=\"grey\")\n    box()\n\n  points(manta[manta$Año == 2008, c('coordLON', 'coordLAT')], pch=16, col=rgb(0, 1, 0, 0.4), cex=2)\n  points(manta[manta$Año == 2010, c('coordLON', 'coordLAT')], pch=16, col=rgb(0, 0, 1, 0.4), cex=2)\n\n\n# Figura por mes\n  layout(matrix(1:4, ncol=2, byrow=TRUE), widths=rep(1/2, 2), heights=rep(1/2, 2))\n  par(mar=c(2, 2, 2, 2))\n  #layout.show(4)\n\n  mes <- c(\"mayo\", \"junio\", \"julio\", \"agosto\")\n\n  for (k in 5:8){\n    plot(holbox, col=\"khaki\", pbg=\"blue\", xlim=lons, ylim=lats, \n         xaxs=\"i\", yaxs=\"i\", axes=TRUE, lty=1, border=\"grey\")\n      text(x=-86.7, y=21.9, mes[k-4])\n      grid(col=\"grey\")\n      box()\n\n    p08 <- manta[manta$Año == 2008 & manta$Mes == k , c('coordLON', 'coordLAT')]\n    p10 <- manta[manta$Año == 2010 & manta$Mes == k , c('coordLON', 'coordLAT')]\n\n    if ( dim(p08)[1] > 0 ){\n      p08 <- recodeCoord(lon = p08$coordLON, lat = p08$coordLAT)\n      # addBubbles() \n      # Requiere 4 columnas: EID, X, Y y Z, donde EID es la secuencia de puntos, \n      # X y Y son la longitud y la latitud y Z es la \"abundancia\"   \n \n      mb <- data.frame(EID=1:nrow(p08), p08)\n      colnames(mb)[2:4] <- c(\"X\", \"Y\", \"Z\")\n      if (nrow(mb)==1) mb <- rbind(mb, data.frame(EID=2, X=0, Y=0, Z=0))\n      class(mb) <- c(\"EventData\",  \"data.frame\")\n \n      addBubbles(mb, symbol.bg=rgb(0,1,0,.4), max.size=0.5, z.max=18,\n            legend.type=\"nested\", symbol.zero=\"+\", legend.pos=NULL, col=\"black\")\n    } \n    if ( dim(p10)[1] > 0 ){\n      p10 <- recodeCoord(lon = p10$coordLON, lat = p10$coordLAT)\n      # addBubbles() \n      # Requiere 4 columnas: EID, X, Y y Z, donde EID es la secuencia de puntos, \n      # X y Y son la longitus y la latitud y Z es la \"captura\"   \n \n      mb <- data.frame(EID=1:nrow(p10), p10)\n      colnames(mb)[2:4] <- c(\"X\", \"Y\", \"Z\")\n      if (nrow(mb)==1) mb <- rbind(mb, data.frame(EID=2, X=0, Y=0, Z=0))\n      class(mb) <- c(\"EventData\",  \"data.frame\")\n \n      addBubbles(mb, symbol.bg=rgb(0,0,1,.4), max.size=0.5, z.max=18,\n            legend.type=\"nested\", symbol.zero=\"+\", col=\"black\", \n            legend.title=\"No. de mantas\", legend.breaks=c(2, 10, 20))\n    }\n  }\n\n\n\n    \n\n\n# Descargar images de SST\nload(\"download.oceancolor.R\")\nlibrary(satin)\n\n\nfor (k in 5:9)\n download.oceancolor(day=1, month=k, year=2008, vari=\"SST\")\n\nfor (k in 5:9)\n  download.oceancolor(day=1, month=k, year=2010, vari=\"SST\")\n\n\nlons <- c(-90, -84)\nlats <- c(19, 24)\n\nlf <- list.files( pattern=glob2rx(\"*.h5\") )\n sst <-  read.oceancolor( file = lf, lons, lats)\n\nlons <- c(-87.5, -86.5)\nlats <- c(21, 22)\n\nx11()\nlayout(matrix(1:4, ncol=2, byrow=TRUE), widths=rep(1/2, 2), heights=rep(1/2, 2))\npar(mar=c(0, 0, 0, 0))\n\nfor (k in 6:9){\n  plotSatin(sst, image=k, map=holbox, xlim=lons, ylim=lats, main.pos=\"bl\")\n}\n\nx11()\nlayout(matrix(1:4, ncol=2, byrow=TRUE), widths=rep(1/2, 2), heights=rep(1/2, 2))\npar(mar=c(0, 0, 0, 0))\n\nfor (k in 1:4){\n  plotSatin(sst, image=k, map=holbox, xlim=lons, ylim=lats, main.pos=\"bl\")\n}\n\n",
    "created" : 1393306655543.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3542067583",
    "id" : "8DFC68A",
    "lastKnownWriteTime" : 1393309048,
    "path" : "G:/Daniel/Mapa_Holbox2.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}